name: OWASP ZAP Baseline on EKS

on:
  push:
    branches:
      - main

jobs:
  zap-baseline:
    runs-on: self-hosted

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      EKS_CLUSTER: ${{ secrets.EKS_CLUSTER_NAME }}
      NAMESPACE: zap-poc
      TARGET_URL: http://flask-service:5000
      REPORT_FILE: report.html
      REPORT_DIR: /zap/reports
      REPORT_PORT: 8090

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install kubectl if missing
        run: |
          if ! command -v kubectl >/dev/null; then
            echo "Installing kubectl..."
            curl -sLO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
          fi
          kubectl version --client --short


      - name: Configure EKS access
        run: |
          aws eks update-kubeconfig  --name "${{ secrets.EKS_CLUSTER_NAME }}" --region "${{ secrets.AWS_REGION1 }}"
          kubectl get nodes 
          
      - name: Deploy Flask app
        run: |
          cd zap-poc
          kubectl create ns "$NAMESPACE" --dry-run=client -o yaml | kubectl apply -f -
          kubectl -n "$NAMESPACE" apply -f k8s/flask-deploy.yaml
          #kubectl -n "$NAMESPACE" rollout status deploy/flask-service --timeout=5m
   

      - name: Deploy ZAP pod & service
        run: |
          cd zap-poc
          kubectl create ns "$NAMESPACE" --dry-run=client -o yaml | kubectl apply -f -
          kubectl -n "$NAMESPACE" apply -f k8s/zap-pvc.yaml
          kubectl -n "$NAMESPACE" apply -f k8s/zap-deploy.yaml
          kubectl -n "$NAMESPACE" apply -f k8s/zap-service.yaml
          kubectl -n "$NAMESPACE" rollout status deploy/zap-server --timeout=8m

      - name: Run ZAP baseline scan inside pod
        run: |
          POD=$(kubectl -n "$NAMESPACE" get pod -l app=zap-server -o jsonpath='{.items[0].metadata.name}')
          echo "Running scan inside pod: $POD"
          kubectl -n "$NAMESPACE" exec "$POD" -- bash -c \
            "zap-baseline.py -t $TARGET_URL -r $REPORT_DIR/$REPORT_FILE"

      - name: Print ZAP report URL
        run: |
          NODE_PORT=$(kubectl -n "$NAMESPACE" get svc zap-report-service -o jsonpath='{.spec.ports[0].nodePort}')
          NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[0].address}')
          echo "--------------------------------------------"
          echo "âœ… ZAP Scan Completed!"
          echo "View report at: http://$NODE_IP:$NODE_PORT/$REPORT_FILE"
          echo "--------------------------------------------"
